name: Java APP CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env: 
  IMAGE_TAG: ${{ github.sha }}
  IMAGE_NAME: java-app

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
  
    - name: Build with Maven
      run: cd java-app && mvn clean package

    - name: Login to ACR
      run: az acr login --name ${{ secrets.ACR_NAME }}
      
    - name: Login to Docker with admin credentials
      run: |
        # Get admin credentials
        ACR_USERNAME=$(az acr credential show --name ${{ secrets.ACR_NAME }} --query username -o tsv)
        ACR_PASSWORD=$(az acr credential show --name ${{ secrets.ACR_NAME }} --query "passwords[0].value" -o tsv)
        
        # Login to Docker with these credentials
        echo $ACR_PASSWORD | docker login ${{ secrets.ACR_NAME }}.azurecr.io --username $ACR_USERNAME --password-stdin
    
    # - name: Build and Push Docker Image with ACR Build
    #   run: |
    #     az acr build \
    #       --registry ${{ secrets.ACR_NAME }} \
    #       --image ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
    #       --image ${{ env.IMAGE_NAME }}:latest \
    #       java-app
    
    - name: Build and Push Docker Image To ACR
      run: |
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -t ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest java-app
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
