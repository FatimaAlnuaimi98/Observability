name: Java APP CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env: 
  IMAGE_TAG: ${{ github.sha }}
  IMAGE_NAME: java-app
jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3
  
    - name: Build with Maven
      run: cd java-app && mvn clean package

    - name: login to ACR
      run: az acr login --name ${{ secrets.ACR_NAME }}
    
    - name: Build and Push Docker Image with ACR Build
      run: |
        # Extract credentials from AZURE_CREDENTIALS to use explicitly
        CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientId')
        CLIENT_SECRET=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientSecret')
        TENANT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.tenantId')
        
        # Login to Azure with explicit service principal credentials
        az login --service-principal --username $CLIENT_ID --password $CLIENT_SECRET --tenant $TENANT_ID
        
        # Now run ACR build with explicit scope
        az acr build \
          --registry ${{ secrets.ACR_NAME }} \
          --image ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
          --image ${{ env.IMAGE_NAME }}:latest \
          java-app